name: CI-CD

on:
  push:
    branches: main

jobs:

  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      #- uses: kolpav/purge-artifacts-action@v1
        #with:
          #token: ${{ secrets.TOKEN }}
          #expire-in: 0days # Set this to 0 to delete all artifacts
  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Yarn Build
        run: |
          yarn install
      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: public
  test-php:
    name: Test/Lint PHP
    runs-on: ubuntu-latest
    needs: build-js
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4 # Use your PHP version
          extensions: mbstring, bcmath # Setup any required extensions for tests
      - name: Composer install
        run: composer install
      # - name: Generate key
      #   run: php artisan key:generate
      # - name: Run Tests
      #   run: ./vendor/bin/phpunit
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-js, test-php]
    if: github.ref == 'refs/heads/new-development'
    steps:
      - uses: actions/checkout@v1
      - name: Download build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          extension-csv: mbstring, bcmath
      - name: Composer install
        run: composer install
      
      # - name: Copy .env
      #   run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      # - name: Generate key
      #   run: php artisan key:generate
      
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to Prod
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run:  dep deploy production --tag=${{ env.GITHUB_REF }} -vvv

      